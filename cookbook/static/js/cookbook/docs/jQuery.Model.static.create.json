c({"name": "jQuery.Model.static.create", "type": "function", "parents": ["jQuery.Model.static"], "comment": "<p>Create is used by [$.Model.prototype.save save] to create a model instance on the server. </p>\n\n<p>The easiest way to implement create is to give it the url to post data to:</p>\n\n<pre><code>$.Model(\"Recipe\",{\n  create: \"/recipes\"\n},{})\n</code></pre>\n\n<p>This lets you create a recipe like:</p>\n\n<pre><code>new Recipe({name: \"hot dog\"}).save();\n</code></pre>\n\n<p>You can also implement create by yourself.  Create gets called with:</p>\n\n<ul>\n<li><code>attrs</code> - the [$.Model.serialize serialized] model attributes.</li>\n<li><code>success(newAttrs)</code> - a success handler.</li>\n<li><code>error</code> - an error handler. </li>\n</ul>\n\n<p>You just need to call success back with\nan object that contains the id of the new instance and any other properties that should be\nset on the instance.</p>\n\n<p>For example, the following code makes a request \nto <code>POST /recipes.json {'name': 'hot+dog'}</code> and gets back\nsomething that looks like:</p>\n\n<pre><code>{ \n  \"id\": 5,\n  \"createdAt\": 2234234329\n}\n</code></pre>\n\n<p>The code looks like:</p>\n\n<pre><code>$.Model(\"Recipe\", {\n  create : function(attrs, success, error){\n    $.post(\"/recipes.json\",attrs, success,\"json\");\n  }\n},{})\n</code></pre>", "params": {"attrs": {"order": 0, "description": "<p>Attributes on the model instance</p>", "name": "attrs", "type": "Object", "optional": false}, "success(newAttrs)": {"order": 1, "description": "<p>the callback function, it must be called with an object \nthat has the id of the new instance and any other attributes the service needs to add.</p>", "name": "success(newAttrs)", "type": "Function", "optional": false}, "error": {"order": 2, "description": "<p>a function to callback if something goes wrong.  </p>", "name": "error", "type": "Function", "optional": false}}, "src": "jquery/model/model.js", "line": 497, "children": []})